name: Create Beta Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Beta version (e.g., 1.0.0-beta.1)'
        required: true
        type: string
      changelog:
        description: 'What changed in this beta?'
        required: false
        type: string

env:
  DOTNET_VERSION: '8.0.x'

jobs:
  create-beta:
    name: Create Beta Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GH_PAT || github.token }}
        fetch-depth: 0

    - name: Validate version format
      shell: bash
      run: |
        if [[ ! "${{ github.event.inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+-(beta|alpha|rc)\.[0-9]+$ ]]; then
          echo "‚ùå Invalid version format. Use: X.Y.Z-beta.N (e.g., 1.0.0-beta.1)"
          exit 1
        fi
        echo "‚úÖ Version format is valid: ${{ github.event.inputs.version }}"

    - name: Check if tag exists
      shell: bash
      run: |
        if git tag | grep -q "^v${{ github.event.inputs.version }}$"; then
          echo "‚ùå Tag v${{ github.event.inputs.version }} already exists"
          exit 1
        fi
        echo "‚úÖ Tag v${{ github.event.inputs.version }} is available"

    - name: Configure Git and create tag
      shell: bash
      run: |
        # Configure git user
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        # If using PAT, update remote URL for authentication
        if [ -n "${{ secrets.GH_PAT }}" ]; then
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git
          echo "‚úÖ Using PAT for authentication"
        else
          echo "‚ÑπÔ∏è  Using default GITHUB_TOKEN"
        fi
        
        # Create and push tag
        git tag -a "v${{ github.event.inputs.version }}" -m "Beta Release v${{ github.event.inputs.version }}"
        git push origin "v${{ github.event.inputs.version }}"
        echo "‚úÖ Tag v${{ github.event.inputs.version }} created and pushed"

    - name: Trigger release workflow
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GH_PAT || github.token }}
        script: |
          await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'release.yml',
            ref: 'v${{ github.event.inputs.version }}',
            inputs: {
              tag: 'v${{ github.event.inputs.version }}'
            }
          });
          
          console.log('üöÄ Release workflow triggered for v${{ github.event.inputs.version }}');
          console.log('üì¶ Check the Actions tab for build progress');
          console.log('üéâ Beta release will be available shortly!');
